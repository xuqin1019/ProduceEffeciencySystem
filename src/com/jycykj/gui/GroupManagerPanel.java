/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jycykj.gui;

import com.jycykj.dao.GroupDao;
import com.jycykj.helper.ImageIconUtil;
import com.jycykj.helper.Util;
import com.jycykj.model.Group;
import com.jycykj.tables.GroupManagerTableModel;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author xuqin
 */
public class GroupManagerPanel extends javax.swing.JPanel {
    
    private boolean isAdd = false;
    private int deleteRowIndex=-1;
    /**
     * Creates new form GroupManagerPanel
     */
    public GroupManagerPanel() {
        initComponents();
        addButton.setEnabled(true);
        deleteButton.setEnabled(false);
        saveButton.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        groupManagerTable = new javax.swing.JTable();

        addButton.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        addButton.setText("添加");
        addButton.setIcon(ImageIconUtil.getIcon("pics/add.png"));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        deleteButton.setText("删除");
        deleteButton.setIcon(ImageIconUtil.getIcon("pics/delete.png"));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        saveButton.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        saveButton.setText("保存");
        saveButton.setIcon(ImageIconUtil.getIcon("pics/save.png"));
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addButton)
                .addGap(31, 31, 31)
                .addComponent(deleteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 135, Short.MAX_VALUE)
                .addComponent(saveButton)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addContainerGap())
        );

        groupManagerTable.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        /*
        groupManagerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        groupManagerTable.setRowHeight(20);
        */

        GroupManagerTableModel groupManagerTableModel = new GroupManagerTableModel(this,groupManagerTable);
        groupManagerTable.setModel(groupManagerTableModel);
        groupManagerTable.getColumn(groupManagerTableModel.getColumnName(0)).setPreferredWidth(122);
        groupManagerTable.getColumn(groupManagerTableModel.getColumnName(1)).setPreferredWidth(280);
        jScrollPane1.setViewportView(groupManagerTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        isAdd = true;

        Group newGroup = new Group();  // the new line added

        newGroup.setGroupId(GroupDao.getInstance().getNextGroupId());     // -1

        GroupManagerTableModel groupManagerTableMode = (GroupManagerTableModel)(groupManagerTable.getModel());

        groupManagerTableMode.getModifiedGroups().put(String.valueOf(newGroup.getGroupId()),newGroup);     //add one line to the table
        groupManagerTableMode.getGroupList().add(newGroup);                                       //groupList : 用于显示的list

        groupManagerTableMode.fireTableRowsInserted(groupManagerTableMode.getRowCount()-1, groupManagerTableMode.getRowCount()-1);   //refresh
        groupManagerTableMode.setIsAdd(isAdd);

        //跳转到最后一行并且选中
        groupManagerTable.scrollRectToVisible(groupManagerTable.getCellRect(groupManagerTable.getRowCount()-1, 0, true));
        int lastRow = groupManagerTable.convertRowIndexToView(groupManagerTable.getRowCount()-1);
        groupManagerTable.changeSelection(lastRow, 0, false, false);

        addButton.setEnabled(false);
        saveButton.setEnabled(true);
    }//GEN-LAST:event_addButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        GroupManagerTableModel groupManagerTableModel = (GroupManagerTableModel)(groupManagerTable.getModel());
        String group_id = String.valueOf(groupManagerTableModel.getGroupList().get(deleteRowIndex).getGroupId());

        if(group_id.equals("-1")) {                 //直接删除还没有保存的行
            groupManagerTableModel.getGroupList().remove(deleteRowIndex);
            groupManagerTableModel.fireTableRowsDeleted(deleteRowIndex, deleteRowIndex);
            addButton.setEnabled(true);
            deleteButton.setEnabled(false);
            return;
        }

        int choice = JOptionPane.showConfirmDialog(this,"你确定要删除此条记录吗","警告",JOptionPane.WARNING_MESSAGE);
        System.out.println("group_id : " + group_id);
        if(choice==JOptionPane.YES_OPTION) {
            System.out.println(deleteRowIndex);

            String sql = "delete from `group` where group_id = " + Integer.valueOf(group_id);

            boolean success =  GroupDao.getInstance().executeUpdate(sql);   //执行事务

            if(success) {
                groupManagerTableModel.getGroupList().remove(deleteRowIndex);
                groupManagerTableModel.fireTableRowsDeleted(deleteRowIndex, deleteRowIndex);
                addButton.setEnabled(true);
                deleteButton.setEnabled(false);

                //-------------------------------------删除班组信息日志----------------------------
                LoginWindow.logger.info("删除班组成功！ : ");
                //-------------------------------------删除班组信息日志----------------------------

                Util.showMessageDialog(this,"删除成功！！！");
            } else {

                //-------------------------------------删除班组信息日志----------------------------
                LoginWindow.logger.error("删除班组信息失败！ : " + GroupDao.getInstance().getErrorMessage());
                //-------------------------------------删除班组信息日志----------------------------

                Util.showMessageDialog(this,"发生未知错误，无法删除！！请联系系统管理员");
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        Map<String,Group> groups = ((GroupManagerTableModel)groupManagerTable.getModel()).getModifiedGroups();
        Set<String> groupIds = groups.keySet();
        StringBuilder sb = new StringBuilder();
        Group group = null;
        for(String groupId : groupIds) {
            if(sb.length()!=0) {
                sb.append(";");
            }
            group = groups.get(groupId);
            if(!groupId.equals("-1")) {    //modified group
                if(group==null || !group.valid()) {
                    Util.showMessageDialogWithTitle(this,"警告", "数据不完整！！！请补全数据再保存");
                    return;
                }
                sb.append("update `group` set name = '" +group.getGroupName()+ "',info='"+ group.getInfo() + "' where group_id="+ Integer.parseInt(groupId));
            } else {                       //new group
                if(group==null || !group.valid()) {
                    Util.showMessageDialogWithTitle(this,"警告", "数据不完整！！！请补全数据再保存");
                    return;
                }
                sb.append("insert into `group`(name,info) values('" +  group.getGroupName() + "','" + group.getInfo() + "')");
            }
        }

        System.out.println(sb.toString());

        boolean success =  GroupDao.getInstance().executeUpdate(sb.toString().split(";"));
        if(success) {           //保存成功

            //-------------------------------------修改班组信息日志----------------------------
            LoginWindow.logger.info("修改班组信息成功！ : ");
            //-------------------------------------修改班组信息日志----------------------------

            Util.showMessageDialog(this,"保存成功！！！");
            ((GroupManagerTableModel)groupManagerTable.getModel()).getModifiedGroups().clear();
            saveButton.setEnabled(false);
            addButton.setEnabled(true);
            isAdd=false;

            List<Group> group_list = ((GroupManagerTableModel)groupManagerTable.getModel()).getGroupList();
            //assign id to the saved group
            group_list.get(group_list.size()-1).setGroupId(GroupDao.getInstance().getGroupId(group_list.get(group_list.size()-1).getGroupName()));

        } else {               //保存失败

            //-------------------------------------修改班组信息日志----------------------------
            LoginWindow.logger.error("修改班组信息失败！ : " + GroupDao.getInstance().getErrorMessage());
            //-------------------------------------修改班组信息日志----------------------------

            Util.showMessageDialogWithTitle(this,"警告", "发生未知错误，无法保存！！请联系系统管理员");
        }
        }

        public JButton getSaveButton() {
            return saveButton;
        }

        public void setSaveButton(JButton saveButton) {
            this.saveButton = saveButton;
    }//GEN-LAST:event_saveButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTable groupManagerTable;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
