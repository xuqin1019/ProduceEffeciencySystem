/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jycykj.gui;

import com.jycykj.dao.ComponentDao;
import com.jycykj.dao.ProcedureDao;
import com.jycykj.helper.ImageIconUtil;
import com.jycykj.helper.Util;
import com.jycykj.model.Procedure;
import com.jycykj.tables.ProcedureManagerTableModel;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author xuqin
 */
public class ProcedureManagerPanel extends javax.swing.JPanel {
    
    private boolean isAdd = false;
    private int deleteRowIndex=-1;
    /**
     * Creates new form ProcedureManagerPanel
     */
    public ProcedureManagerPanel() {
        initComponents();
        addButton.setEnabled(true);
        deleteButton.setEnabled(false);
        saveButton.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        procedureManagerTable = new javax.swing.JTable();

        addButton.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        addButton.setText("添加");
        addButton.setIcon(ImageIconUtil.getIcon("pics/add.png"));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        deleteButton.setText("删除");
        deleteButton.setIcon(ImageIconUtil.getIcon("pics/delete.png"));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        saveButton.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        saveButton.setText("保存");
        saveButton.setIcon(ImageIconUtil.getIcon("pics/save.png"));
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addButton)
                .addGap(31, 31, 31)
                .addComponent(deleteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 135, Short.MAX_VALUE)
                .addComponent(saveButton)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addContainerGap())
        );

        procedureManagerTable.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        procedureManagerTable.addMouseListener(new MyMouseAdapter());
        /*
        procedureManagerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        procedureManagerTable.setRowHeight(20);
        */

        procedureManagerTable.setModel(new ProcedureManagerTableModel(this,procedureManagerTable));
        jScrollPane1.setViewportView(procedureManagerTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 18, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        isAdd = true;

        Procedure newProcedure = new Procedure();  // the new line added
       // newProcedure.setProcedureName(TOOL_TIP_TEXT_KEY);
        
        newProcedure.setProcedureId(ProcedureDao.getInstance().getNextProcedureId());
        
        ProcedureManagerTableModel procedureManagerTableMode = (ProcedureManagerTableModel)(procedureManagerTable.getModel());

        procedureManagerTableMode.getModifiedProcedures().put(newProcedure.getProcedureId(),newProcedure);     //add one line to the table
        procedureManagerTableMode.getProcedureList().add(newProcedure);                                       //procedureList : 用于显示的list

        procedureManagerTableMode.fireTableRowsInserted(procedureManagerTableMode.getRowCount()-1, procedureManagerTableMode.getRowCount()-1);   //refresh
        procedureManagerTableMode.setIsAdd(isAdd);

        //跳转到最后一行并且选中
        procedureManagerTable.scrollRectToVisible(procedureManagerTable.getCellRect(procedureManagerTable.getRowCount()-1, 0, true));
        int lastRow = procedureManagerTable.convertRowIndexToView(procedureManagerTable.getRowCount()-1);
        procedureManagerTable.changeSelection(lastRow, 0, false, false);

        addButton.setEnabled(false);
        saveButton.setEnabled(true);
    }//GEN-LAST:event_addButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        ProcedureManagerTableModel procedureManagerTableModel = (ProcedureManagerTableModel)(procedureManagerTable.getModel());
        String procedure_id = procedureManagerTableModel.getProcedureList().get(deleteRowIndex).getProcedureId();

        if(procedure_id.equals("")) {                 //直接删除还没有保存的行
            procedureManagerTableModel.getProcedureList().remove(deleteRowIndex);
            procedureManagerTableModel.fireTableRowsDeleted(deleteRowIndex, deleteRowIndex);
            addButton.setEnabled(true);
            deleteButton.setEnabled(false);
            saveButton.setEnabled(false);
            return;
        }

        int choice = JOptionPane.showConfirmDialog(this,"你确定要删除此条记录吗","警告",JOptionPane.WARNING_MESSAGE);
        System.out.println("procedure_id : " + procedure_id);
        if(choice==JOptionPane.YES_OPTION) {
            System.out.println(deleteRowIndex);
            
            String sql = "delete from `procedure` where procedure_id = " + Integer.valueOf(procedure_id);
            
            boolean success =  ProcedureDao.getInstance().executeUpdate(sql);   //执行事务

            if(success) {
                procedureManagerTableModel.getProcedureList().remove(deleteRowIndex);
                procedureManagerTableModel.fireTableRowsDeleted(deleteRowIndex, deleteRowIndex);
                addButton.setEnabled(true);
                deleteButton.setEnabled(false);

                
                //-------------------------------------删除工序信息日志----------------------------
                LoginWindow.logger.info("删除工序成功！ : ");
                //-------------------------------------删除工序信息日志----------------------------

                Util.showMessageDialog(this,"删除成功！！！");
            } else {

                //-------------------------------------删除工序信息日志----------------------------
                LoginWindow.logger.error("删除工序信息失败！ : " + ProcedureDao.getInstance().getErrorMessage());
                //-------------------------------------删除工序信息日志----------------------------

                Util.showMessageDialog(this,"发生未知错误，无法删除！！请联系系统管理员");
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        Map<String,Procedure> procedures = ((ProcedureManagerTableModel)procedureManagerTable.getModel()).getModifiedProcedures();
        Set<String> procedureIds = procedures.keySet();
        StringBuilder sb = new StringBuilder();
        Procedure procedure = null;
        for(String procedureId : procedureIds) {
            if(sb.length()!=0) {
                sb.append(";");
            }
            procedure = procedures.get(procedureId);
            if(!procedureId.equals("")) {    //modified procedure
                if(procedure==null || !procedure.valid()) {
                    Util.showMessageDialogWithTitle(this,"警告", "数据不完整！！！请补全数据再保存");
                    return;
                }
                sb.append("update `procedure` set name = '" +procedure.getProcedureName()+ "',factor="+ procedure.getFactor() + " where procedure_id="+ Integer.parseInt(procedureId));
            } else {                       //new procedure
                if(procedure==null || !procedure.valid()) {
                    Util.showMessageDialogWithTitle(this,"警告", "数据不完整！！！请补全数据再保存");
                    return;
                }
                sb.append("insert into `procedure`(name,factor) values('" +  procedure.getProcedureName() + "'," + procedure.getFactor() + ")");
            }
        }
        
        System.out.println(sb.toString());
        
        boolean success =  ProcedureDao.getInstance().executeUpdate(sb.toString().split(";"));
        if(success) {           //保存成功

            //-------------------------------------修改工序信息日志----------------------------
            LoginWindow.logger.info("修改工序信息成功！ : ");
            //-------------------------------------修改工序信息日志----------------------------

            Util.showMessageDialog(this,"保存成功！！！");
            ((ProcedureManagerTableModel)procedureManagerTable.getModel()).getModifiedProcedures().clear();
            saveButton.setEnabled(false);
            addButton.setEnabled(true);
            isAdd=false;
            
            List<Procedure> procedure_list = ((ProcedureManagerTableModel)procedureManagerTable.getModel()).getProcedureList();
            //assign id to the saved procedure
            procedure_list.get(procedure_list.size()-1).setProcedureId(String.valueOf(ProcedureDao.getInstance().getProcedureId(procedure_list.get(procedure_list.size()-1).getProcedureName())));
           
        } else {               //保存失败

            //-------------------------------------修改工序信息日志----------------------------
            LoginWindow.logger.error("修改工序信息失败！ : " + ComponentDao.getInstance().getErrorMessage());
            //-------------------------------------修改工序信息日志----------------------------

            Util.showMessageDialogWithTitle(this,"警告", "发生未知错误，无法保存！！请联系系统管理员");
        }
     }

    public JButton getSaveButton() {
        return saveButton;
    }

    public void setSaveButton(JButton saveButton) {
            this.saveButton = saveButton;
    }//GEN-LAST:event_saveButtonActionPerformed

     private class MyMouseAdapter extends MouseAdapter {      //listen for the componentProcedureTable click event 
        public void mousePressed(MouseEvent e) {  
            if (procedureManagerTable.equals(e.getSource())) {  
                deleteRowIndex = procedureManagerTable.rowAtPoint(e.getPoint());  
                deleteButton.setEnabled(true);
            }  
        }  
    }     
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable procedureManagerTable;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
